#lang racket

(define(solve-quadratic a b c)
  (let ((discriminant (- (* b b) (* 4 a c))))
    (cond ((> discriminant 0)
        (list (/(round(*(/(+ (- b)(sqrt discriminant))(* 2 a)) 1000))1000) (/(round(*(/(- (- b) (sqrt discriminant))(* 2 a)) 1000))1000)))
          ((= discriminant 0)
           (list (/(round(*(/(+ (- b)(sqrt discriminant))(* 2 a)) 1000))1000)))
          (else '()))))


(solve-quadratic 4 5 -10)
(solve-quadratic 1 -2 1)
(solve-quadratic 3 2 1)